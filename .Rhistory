rm(list=ls())
knitr::opts_chunk$set(echo=FALSE)
library(tidyverse)
library(RCurl)
x <- "https://raw.githubusercontent.com/frankmoriarty/covid_ie/master/doh_covid_ie_cases_analysis.csv"
data1 <- read.csv(text = x)
n <- nrow(data1)
the.date <- data1$date[n]
## Progression of the Virus
As we can see here, the number of diagnosed Covid-19 cases in Ireland has grown exponentially, reaching **`r data1$cases_cumul[which(data1$date == the.date)]`** on `r the.date`. On the brightside, however, we can see that the rate of infection has fallen drastically; as the impact of *social distancing* translates into each infected person infecting fewer and fewer other people.
```{r Covid Progression, include=TRUE, message=FALSE, warning=FALSE}
library(tidyverse)
library(RCurl)
x <- "https://raw.githubusercontent.com/frankmoriarty/covid_ie/master/doh_covid_ie_cases_analysis.csv"
data1 <- read.csv(text = x)
n <- nrow(data1)
total_cases <- as.numeric(data1$cases_cumul)
data1$newcases[1] <- NA
if (n > 1) for(i in 2:n) data1$newcases[i] <- ( total_cases[i] - total_cases[i-1] )
n <- nrow(data1)
total_cases <- as.numeric(data1$cases_cumul)
data1$newcases[1] <- NA
View(data1)
x <- url("https://raw.githubusercontent.com/frankmoriarty/covid_ie/master/doh_covid_ie_cases_analysis.csv")
View(x)
url = "https://raw.githubusercontent.com/frankmoriarty/covid_ie/master/doh_covid_ie_cases_analysis.csv"
View(url)
install.packages("curl")
blogdown::build_site()
library(curl)
x <- "https://raw.githubusercontent.com/frankmoriarty/covid_ie/master/doh_covid_ie_cases_analysis.csv"
View(x)
x <- curl"https://raw.githubusercontent.com/frankmoriarty/covid_ie/master/doh_covid_ie_cases_analysis.csv"
x <- curl("https://raw.githubusercontent.com/frankmoriarty/covid_ie/master/doh_covid_ie_cases_analysis.csv")
View(x)
newcases <- readLines(x)
View(newcases)
newcases <- read.csv(text = x, stringsAsFactors=FALSE)
n <- nrow(newcases)
library(Rcurl)
x <- geturl("https://raw.githubusercontent.com/frankmoriarty/covid_ie/master/doh_covid_ie_cases_analysis.csv")
library(Rcurl)
library(RCurl)
x <- geturl("https://raw.githubusercontent.com/frankmoriarty/covid_ie/master/doh_covid_ie_cases_analysis.csv")
x <- getURL("https://raw.githubusercontent.com/frankmoriarty/covid_ie/master/doh_covid_ie_cases_analysis.csv")
View(newcases)
x <- getURL("https://raw.githubusercontent.com/frankmoriarty/covid_ie/master/doh_covid_ie_cases_analysis.csv")
install.packages("RCurl")
library(RCurl)
x <- getURL("https://raw.githubusercontent.com/frankmoriarty/covid_ie/master/doh_covid_ie_cases_analysis.csv")
blogdown::serve_site()
blogdown::serve_site()
install.packages("blogdown")
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
newcases<-
read.csv("https://opendata-geohive.hub.arcgis.com/datasets/d8eb52d56273413b84b0187a4e9117be_0.csv?outSR=%7B%22latestWkid%22%3A3857%2C%22wkid%22%3A102100%7D")
newcases<-
read.csv("https://opendata-geohive.hub.arcgis.com/datasets/d8eb52d56273413b84b0187a4e9117be_0.csv?outSR=%7B%22latestWkid%22%3A3857%2C%22wkid%22%3A102100%7D")
n <- nrow(newcases)
newcases1$Date <- as.character(newcases1$Date)
newcases<-
read.csv("https://opendata-geohive.hub.arcgis.com/datasets/d8eb52d56273413b84b0187a4e9117be_0.csv?outSR=%7B%22latestWkid%22%3A3857%2C%22wkid%22%3A102100%7D")
newcases<-
read.csv("https://opendata-geohive.hub.arcgis.com/datasets/d8eb52d56273413b84b0187a4e9117be_0.csv?outSR=%7B%22latestWkid%22%3A3857%2C%22wkid%22%3A102100%7D")
n <- nrow(newcases)
newcases$Date <- as.character(newcases$Date)
newcases$Date <- substr(newcases$Date, 1, 10)
newcases$Date <- as.Date(newcases$Date, "%Y/%m/%d")
the.date <- data1$Date[n]
the.date <- newcases$Date[n]
rm(list=ls())
data1 <- read.csv("https://opendata-geohive.hub.arcgis.com/datasets/d8eb52d56273413b84b0187a4e9117be_0.csv?outSR=%7B%22latestWkid%22%3A3857%2C%22wkid%22%3A102100%7D")
data1 <- read.csv("https://opendata-geohive.hub.arcgis.com/datasets/d8eb52d56273413b84b0187a4e9117be_0.csv?outSR=%7B%22latestWkid%22%3A3857%2C%22wkid%22%3A102100%7D")
n <- nrow(data1)
data1$Date <- as.character(data1$Date)
data1$Date <- substr(data1$Date, 1, 10)
data1$Date <- as.Date(data1$Date, "%Y/%m/%d")
the.date <- data1$Date[n]
library(zoo)
library(ggplot2)
library(lubridate)
library(scales)
data1$newcases[1] <- NA
if (n > 1) for(i in 2:n) data1$newcases[i] <- ( data1$TotalConfirmedCovidCases[i] - data1$TotalConfirmedCovidCases[i-1] )
#gives rolling mean over 5 days
data1$cases_5d <- rollmeanr(data1$newcases, 5, fill=NA)
data1$cases_5d_off[1] <- NA
if (n > 15) for(i in 16:n) data1$cases_5d_off[i] <- data1$cases_5d[i-15]
plot <- ggplot (data1[(n-14):n,], aes(x=Date)) +
geom_line(aes(y=cases_5d, color = "red"),size=1.2) +
geom_line(aes(y=cases_5d_off, color="blue"),size=1,linetype = "dashed") +
scale_color_manual(values = c("blue","red"), name = "", labels = c("Previous Fortnight", "Last Fortnight")) +
scale_x_date("Date",breaks = pretty_breaks(10))+
scale_y_continuous("New daily cases (5-day average)")+
theme(legend.key = element_rect(fill = "lightblue", color = NA), axis.text=element_text(size=10, face = "bold"),
axis.title=element_text(size=14,face="bold"), plot.title = element_text(size=16, face = "bold")) +
scale_linetype(guide=FALSE) +
scale_size(guide=FALSE)+
guides(fill = guide_legend(reverse = TRUE))
plot
knitr::opts_chunk$set(echo = FALSE)
rm(list=ls())
data1 <- read.csv("https://opendata-geohive.hub.arcgis.com/datasets/d8eb52d56273413b84b0187a4e9117be_0.csv?outSR=%7B%22latestWkid%22%3A3857%2C%22wkid%22%3A102100%7D")
n <- nrow(data1)
data1$Date <- as.character(data1$Date)
data1$Date <- substr(data1$Date, 1, 10)
data1$Date <- as.Date(data1$Date, "%Y/%m/%d")
the.date <- data1$Date[n]
rm(list=ls())
data1 <- read.csv("https://opendata-geohive.hub.arcgis.com/datasets/d8eb52d56273413b84b0187a4e9117be_0.csv?outSR=%7B%22latestWkid%22%3A3857%2C%22wkid%22%3A102100%7D")
n <- nrow(data1)
data1$Date <- as.character(data1$Date)
data1$Date <- substr(data1$Date, 1, 10)
data1$Date <- as.Date(data1$Date, "%Y/%m/%d")
the.date <- data1$Date[n]
library(zoo)
library(ggplot2)
library(lubridate)
library(scales)
data1$newcases[1] <- NA
if (n > 1) for(i in 2:n) data1$newcases[i] <- ( data1$TotalConfirmedCovidCases[i] - data1$TotalConfirmedCovidCases[i-1] )
#gives rolling mean over 5 days
data1$cases_5d <- rollmeanr(data1$newcases, 5, fill=NA)
data1$cases_5d_off[1] <- NA
if (n > 15) for(i in 16:n) data1$cases_5d_off[i] <- data1$cases_5d[i-15]
plot <- ggplot (data1[(n-14):n,], aes(x=Date)) +
geom_line(aes(y=cases_5d, color = "red"),size=1.2) +
geom_line(aes(y=cases_5d_off, color="blue"),size=1,linetype = "dashed") +
scale_color_manual(values = c("blue","red"), name = "", labels = c("Previous Fortnight", "Last Fortnight")) +
scale_x_date("Date",breaks = pretty_breaks(10))+
scale_y_continuous("New daily cases (5-day average)")+
theme(legend.key = element_rect(fill = "lightblue", color = NA), axis.text=element_text(size=10, face = "bold"),
axis.title=element_text(size=14,face="bold"), plot.title = element_text(size=16, face = "bold")) +
scale_linetype(guide=FALSE) +
scale_size(guide=FALSE)+
guides(fill = guide_legend(reverse = TRUE))
plot
blogdown:::preview_site()
rm(list=ls())
data1 <- read.csv("https://opendata-geohive.hub.arcgis.com/datasets/d8eb52d56273413b84b0187a4e9117be_0.csv?outSR=%7B%22latestWkid%22%3A3857%2C%22wkid%22%3A102100%7D")
data1 <- read.csv("https://opendata-geohive.hub.arcgis.com/datasets/d8eb52d56273413b84b0187a4e9117be_0.csv?outSR=%7B%22latestWkid%22%3A3857%2C%22wkid%22%3A102100%7D")
n <- nrow(data1)
data1 <- read.csv("https://opendata-geohive.hub.arcgis.com/datasets/d8eb52d56273413b84b0187a4e9117be_0.csv?outSR=%7B%22latestWkid%22%3A3857%2C%22wkid%22%3A102100%7D")
n <- nrow(data1)
data1$Date <- as.character(data1$Date)
data1$Date <- substr(data1$Date, 1, 10)
data1$Date <- as.Date(data1$Date, "%Y/%m/%d")
the.date <- data1$Date[n]
library(zoo)
library(ggplot2)
library(lubridate)
library(scales)
data1$newcases[1] <- NA
if (n > 1) for(i in 2:n) data1$newcases[i] <- ( data1$TotalConfirmedCovidCases[i] - data1$TotalConfirmedCovidCases[i-1] )
#gives rolling mean over 5 days
data1$cases_5d <- rollmeanr(data1$newcases, 5, fill=NA)
data1$cases_5d_off[1] <- NA
if (n > 15) for(i in 16:n) data1$cases_5d_off[i] <- data1$cases_5d[i-15]
plot <- ggplot (data1[(n-14):n,], aes(x=Date)) +
geom_line(aes(y=cases_5d, color = "red"),size=1.2) +
geom_line(aes(y=cases_5d_off, color="blue"),size=1,linetype = "dashed") +
scale_color_manual(values = c("blue","red"), name = "", labels = c("Previous Fortnight", "Last Fortnight")) +
scale_x_date("Date",breaks = pretty_breaks(10))+
scale_y_continuous("New daily cases (5-day average)")+
theme(legend.key = element_rect(fill = "lightblue", color = NA), axis.text=element_text(size=10, face = "bold"),
axis.title=element_text(size=14,face="bold"), plot.title = element_text(size=16, face = "bold")) +
scale_linetype(guide=FALSE) +
scale_size(guide=FALSE)+
guides(fill = guide_legend(reverse = TRUE))
plot
knitr::opts_chunk$set(echo = FALSE)
rm(list=ls())
data1 <- read.csv("https://opendata-geohive.hub.arcgis.com/datasets/d8eb52d56273413b84b0187a4e9117be_0.csv?outSR=%7B%22latestWkid%22%3A3857%2C%22wkid%22%3A102100%7D")
n <- nrow(data1)
data1$Date <- as.character(data1$Date)
data1$Date <- substr(data1$Date, 1, 10)
data1$Date <- as.Date(data1$Date, "%Y/%m/%d")
the.date <- data1$Date[n]
rm(list=ls())
data1 <- read.csv("https://opendata-geohive.hub.arcgis.com/datasets/d8eb52d56273413b84b0187a4e9117be_0.csv?outSR=%7B%22latestWkid%22%3A3857%2C%22wkid%22%3A102100%7D")
n <- nrow(data1)
data1$Date <- as.character(data1$Date)
data1$Date <- substr(data1$Date, 1, 10)
data1$Date <- as.Date(data1$Date, "%Y/%m/%d")
the.date <- data1$Date[n]
library(zoo)
library(ggplot2)
library(lubridate)
library(scales)
data1$newcases[1] <- NA
if (n > 1) for(i in 2:n) data1$newcases[i] <- ( data1$TotalConfirmedCovidCases[i] - data1$TotalConfirmedCovidCases[i-1] )
#gives rolling mean over 5 days
data1$cases_5d <- rollmeanr(data1$newcases, 5, fill=NA)
data1$cases_5d_off[1] <- NA
if (n > 15) for(i in 16:n) data1$cases_5d_off[i] <- data1$cases_5d[i-15]
plot <- ggplot (data1[(n-14):n,], aes(x=Date)) +
geom_line(aes(y=cases_5d, color = "red"),size=1.2) +
geom_line(aes(y=cases_5d_off, color="blue"),size=1,linetype = "dashed") +
scale_color_manual(values = c("blue","red"), name = "", labels = c("Previous Fortnight", "Last Fortnight")) +
scale_x_date("Date",breaks = pretty_breaks(10))+
scale_y_continuous("New daily cases (5-day average)")+
theme(legend.key = element_rect(fill = "lightblue", color = NA), axis.text=element_text(size=10, face = "bold"),
axis.title=element_text(size=14,face="bold"), plot.title = element_text(size=16, face = "bold")) +
scale_linetype(guide=FALSE) +
scale_size(guide=FALSE)+
guides(fill = guide_legend(reverse = TRUE))
plot
View(data1$Date)
library(tidyverse)
plot
blogdown:::preview_site()
blogdown::serve_site()
blogdown:::preview_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::build_dir()
blogdown:::preview_site()
newcases<-
read.csv("https://opendata-geohive.hub.arcgis.com/datasets/d8eb52d56273413b84b0187a4e9117be_0.csv?outSR=%7B%22latestWkid%22%3A3857%2C%22wkid%22%3A102100%7D")
n <- nrow(newcases)
newcases$Date <- as.character(newcases$Date)
newcases$Date <- substr(newcases$Date, 1, 10)
newcases$Date <- as.Date(newcases$Date, "%Y/%m/%d")
the.date <- newcases$Date[n]
blogdown:::preview_site()
knitr::opts_chunk$set(echo = FALSE)
rm(list=ls())
data1 <- read.csv("https://opendata-geohive.hub.arcgis.com/datasets/d8eb52d56273413b84b0187a4e9117be_0.csv?outSR=%7B%22latestWkid%22%3A3857%2C%22wkid%22%3A102100%7D")
n <- nrow(data1)
data1$Date <- as.character(data1$Date)
data1$Date <- substr(data1$Date, 1, 10)
data1$Date <- as.Date(data1$Date, "%Y/%m/%d")
the.date <- data1$Date[n]
rm(list=ls())
data1 <- read.csv("https://opendata-geohive.hub.arcgis.com/datasets/d9be85b30d7748b5b7c09450b8aede63_0.csv?outSR=%7B%22latestWkid%22%3A3857%2C%22wkid%22%3A102100%7D")
data1 <- read.csv("https://opendata-geohive.hub.arcgis.com/datasets/d9be85b30d7748b5b7c09450b8aede63_0.csv?outSR=%7B%22latestWkid%22%3A3857%2C%22wkid%22%3A102100%7D")
n <- nrow(data1)
n <- nrow(data1)
data1$Date <- as.character(data1$TimeStamp)
data1$Date <- substr(data1$Date, 1, 10)
data1$Date <- as.Date(data1$Date, "%Y/%m/%d")
the.date <- data1$Date[n]
library(sf)
library(tidyverse)
library(raster)
library(raster)
library(dplyr)
library(spData)
library(tmap)
library(raster)
library(dplyr)
library(spData)
library(tmap)
library(csodata)
shp <- cso_get_geo("ac")
a<- data.frame(data1$Date, data1$CountyName, data1$ConfirmedCovidCases)
b <- reshape(a, direction="wide", idvar="data1.Date", timevar="data1.CountyName")
counties_start <- grep("data1.ConfirmedCovidCases.Carlow", colnames(b))
counties_stop <- grep("data1.ConfirmedCovidCases.Wicklow", colnames(b))
counties <- tibble(b[which(b$data1.Date == the.date ), counties_start:counties_stop])
cso <- read.csv("https://raw.githubusercontent.com/frankmoriarty/covid_ie/master/counties_population_cso_2016.csv")
counties <- data.frame(r1=names(counties), t(counties))
colnames(counties)[2] <- "cases"
colnames(counties)[1] <- "county_doh"
counties$county_doh <- substring(counties$county_doh,27)
counties$county_doh <- tolower(counties$county_doh)
counties$cases <- as.numeric(as.character(counties$cases))
counties[,1] <- sub("cases_", "", counties[,1])
counties$cases <- as.numeric(counties$cases)
county_cases <- merge(cso, counties, by="county_doh")
county_cases$cases_per_mil <- 1000000*county_cases$cases/county_cases$pop
names(shp)[8] <- "county"
shp$county[20]="Dun Laoghaire-Rathdown"
county_cases$county[8]="Dun Laoghaire-Rathdown"
merged_cases <- merge(shp, county_cases, by="county")
tm_shape(merged_cases) + tm_fill(col="cases_per_mil", style = "pretty", title=c(paste("Cases per million", the.date))) + tm_borders() + tm_layout(asp = 1.28)
knitr::opts_chunk$set(echo = FALSE)
rm(list=ls())
data1 <- read.csv("https://opendata-geohive.hub.arcgis.com/datasets/d8eb52d56273413b84b0187a4e9117be_0.csv?outSR=%7B%22latestWkid%22%3A3857%2C%22wkid%22%3A102100%7D")
data1 <- read.csv("https://opendata-geohive.hub.arcgis.com/datasets/d8eb52d56273413b84b0187a4e9117be_0.csv?outSR=%7B%22latestWkid%22%3A3857%2C%22wkid%22%3A102100%7D")
n <- nrow(data1)
data1$Date <- as.character(data1$Date)
n <- nrow(data1)
data1$Date <- as.character(data1$Date)
data1$Date <- substr(data1$Date, 1, 10)
data1$Date <- as.Date(data1$Date, "%Y/%m/%d")
the.date <- data1$Date[n]
rm(list=ls())
knitr::opts_chunk$set(echo = FALSE)
data1 <- read.csv("https://opendata-geohive.hub.arcgis.com/datasets/d8eb52d56273413b84b0187a4e9117be_0.csv?outSR=%7B%22latestWkid%22%3A3857%2C%22wkid%22%3A102100%7D")
n <- nrow(data1)
data1$Date <- as.character(data1$Date)
data1$Date <- substr(data1$Date, 1, 10)
data1$Date <- as.Date(data1$Date, "%Y/%m/%d")
the.date <- data1$Date[n]
rm(list=ls())
library(tidyverse)
library(ggplot2)
data1 <- read.csv("https://opendata-geohive.hub.arcgis.com/datasets/d8eb52d56273413b84b0187a4e9117be_0.csv?outSR=%7B%22latestWkid%22%3A3857%2C%22wkid%22%3A102100%7D")
data1 <- read.csv("https://opendata-geohive.hub.arcgis.com/datasets/d8eb52d56273413b84b0187a4e9117be_0.csv?outSR=%7B%22latestWkid%22%3A3857%2C%22wkid%22%3A102100%7D")
n <- nrow(data1)
the.date <- data1$Date[n]
age_population_cso <- read.csv("https://raw.githubusercontent.com/frankmoriarty/covid_ie/master/age_population_cso_2019.csv")
totalllcases <- as.numeric(data1$TotalConfirmedCovidCases)
age <- c("0-4","05-14","15-24","25-34","35-44","45-54","55-64","65+")
cases <- as.numeric(c(data1$Aged1to4[which(data1$Date == the.date )],
data1$Aged5to14[which(data1$Date == the.date )],
data1$Aged15to24[which(data1$Date == the.date )],
data1$Aged25to34[which(data1$Date == the.date )],
data1$Aged35to44[which(data1$Date == the.date )],
data1$Aged45to54[which(data1$Date == the.date )],
data1$Aged55to64[which(data1$Date == the.date )],
data1$Aged65up[which(data1$Date == the.date )]))
popcso<- age_population_cso$pop_estimate[c(1:7,11)]      #the population estimates
popcso.dividedbymillion <- popcso/1000000          #the population estimates divided by million as per formula in notebook
cases1M <- cases/popcso.dividedbymillion         #this gives a string of the cases per one million by age
df <- data.frame(age,cases1M)
the.plot <- ggplot(data=df, aes(x= age, y=cases1M,fill="indianred4", color="indianred4")) + geom_bar(stat='identity')
total.cases <-totalllcases[which(data1$Date == the.date )]  #this gives the total cases on the date
totalpop.dividedby1m <- (age_population_cso$pop_estimate[which(age_population_cso$age_group=='cases_all_ages')])/1000000
mean.cases1M<- as.numeric(total.cases)/as.numeric(totalpop.dividedby1m)   #this is population mean for average abline
total.cases15plus <- totalllcases[which(data1$Date == the.date )] -  (( data1$Aged1to4[which(data1$Date == the.date )]+               data1$Aged5to14[which(data1$Date == the.date )])) #this gave the total amount of cases 15 plus
pop15plus.dividedby1M <- (age_population_cso$pop_estimate[which(age_population_cso$age_group=='cases_age_15_plus')])/1000000    #this was the population 15 plus divided by 1 million as per formula in notebook
mean.cases15plus1M <- total.cases15plus/pop15plus.dividedby1M  #this shows the total cases 15 plus per 1 million people
plot2 <- the.plot + scale_color_manual(values="indianred4",guide=FALSE)+scale_fill_manual(values="indianred4", guide=FALSE)
plot3 <- plot2 +geom_hline(aes(yintercept= mean.cases15plus1M, linetype = "Mean 15-plus"), colour= "green", size=1.25) +
geom_hline(aes(yintercept=mean.cases1M , linetype = "Mean Total Population"), colour= "yellow", size=1.25) +
scale_linetype_manual(name = "", values = c(2, 2),
guide = guide_legend(override.aes = list(color = c("green", "yellow"))))
plot4 <- plot3 + labs(title= "Confirmed Covid Cases by Age",y= "Cases per Million", x = "Age-groups (Yr)")
plot4 +theme(legend.key = element_rect(fill = "lightblue", color = NA), axis.text=element_text(size=8, face = "bold"),
axis.title=element_text(size=14,face="bold"), plot.title = element_text(size=16, face = "bold"))
rm(list=ls())
data1 <- read.csv("https://opendata-geohive.hub.arcgis.com/datasets/d8eb52d56273413b84b0187a4e9117be_0.csv?outSR=%7B%22latestWkid%22%3A3857%2C%22wkid%22%3A102100%7D")
data1 <- read.csv("https://opendata-geohive.hub.arcgis.com/datasets/d8eb52d56273413b84b0187a4e9117be_0.csv?outSR=%7B%22latestWkid%22%3A3857%2C%22wkid%22%3A102100%7D")
n <- nrow(data1)
data1$Date <- as.character(data1$Date)
data1$Date <- as.character(data1$Date)
data1$Date <- substr(data1$Date, 1, 10)
data1$Date <- as.Date(data1$Date, "%Y/%m/%d")
the.date <- data1$Date[n]
library(tidyverse)
library(viridis)
library(lubridate)
age_population_cso <- read.csv("https://raw.githubusercontent.com/frankmoriarty/covid_ie/master/age_population_cso_2019.csv")
totalllcases <- as.numeric(data1$TotalConfirmedCovidCases)
age <- c("0-4","05-14","15-24","25-34","35-44","45-54","55-64","65+")
cases <- as.numeric(c(data1$Aged1to4[which(data1$Date == the.date )] - data1$Aged1to4[which(data1$Date == the.date -14 )] ,  data1$Aged5to14[which(data1$Date == the.date )] - data1$Aged5to14[which(data1$Date == the.date -14 )],
data1$Aged15to24[which(data1$Date == the.date )] - data1$Aged15to24[which(data1$Date == the.date - 14 )], data1$Aged25to34[which(data1$Date == the.date )] - data1$Aged25to34[which(data1$Date == the.date - 14 )],
data1$Aged35to44[which(data1$Date == the.date )] - data1$Aged35to44[which(data1$Date == the.date - 14 )],
data1$Aged45to54[which(data1$Date == the.date )] - data1$Aged45to54[which(data1$Date == the.date -14 )],
data1$Aged55to64[which(data1$Date == the.date )] - data1$Aged55to64[which(data1$Date == the.date - 14 )],
data1$Aged65up[which(data1$Date == the.date )] - data1$Aged65up[which(data1$Date == the.date - 14 )] ))
popcso<- age_population_cso$pop_estimate[c(1:7,11)]      #the population estimates
popcso.dividedbymillion <- popcso/1000000          #the population estimates divided by million as per formula in notebook
cases1M <- cases/popcso.dividedbymillion         #this gives a string of the cases per one million by age
df <- data.frame(age,cases1M)
the.plot <- ggplot(data=df, aes(x= age, y=cases1M,fill= age)) + geom_bar(stat='identity') +
scale_fill_viridis(option = "D", discrete = TRUE, guide= FALSE)
total.cases <- (totalllcases[which(data1$Date == the.date )] - totalllcases[which(data1$Date == the.date -14 )]) #this gives the total cases on the date
totalpop.dividedby1m <- (age_population_cso$pop_estimate[which(age_population_cso$age_group=='cases_all_ages')])/1000000
mean.cases1M<- as.numeric(total.cases)/as.numeric(totalpop.dividedby1m)   #this is population mean for average abline
total.cases15plus <- (totalllcases[which(data1$Date == the.date )]-totalllcases[which(data1$Date == the.date - 14 )])-  ((data1$Aged1to4[which(data1$Date == the.date )]-data1$Aged1to4[which(data1$Date == the.date - 14 )])+               (data1$Aged5to14[which(data1$Date == the.date )] - data1$Aged5to14[which(data1$Date == the.date - 14 )])) #this gave the total amount of cases 15 plus
pop15plus.dividedby1M <- (age_population_cso$pop_estimate[which(age_population_cso$age_group=='cases_age_15_plus')])/1000000    #this was the population 15 plus divided by 1 million as per formula in notebook
mean.cases15plus1M <- total.cases15plus/pop15plus.dividedby1M  #this shows the total cases 15 plus per 1 million people
plot2 <- the.plot +geom_hline(aes(yintercept= mean.cases15plus1M, linetype = "Mean 15-plus"), colour= "green", size=1.25) +
geom_hline(aes(yintercept=mean.cases1M , linetype = "Mean Total Population"), colour= "yellow", size=1.25) +
scale_linetype_manual(name = "", values = c(2, 2),
guide = guide_legend(override.aes = list(color = c("green", "yellow"))))
plot3 <- plot2 + labs(title= "Cases by Age over last 2 Weeks",y= "Cases per Million", x = "Age-groups (Yr)")
plot3 +theme(legend.key = element_rect(fill = "lightblue", color = NA), axis.text=element_text(size=8, face = "bold"),
axis.title=element_text(size=14,face="bold"), plot.title = element_text(size=16, face = "bold"))
blogdown:::preview_site()
blogdown:::preview_site()
blogdown::serve_site()
library(blogdown)
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown:::preview_site()
blogdown::serve_site()
blogdown:::preview_site()
blogdown::serve_site()
blogdown:::preview_site()
blogdown::serve_siteI()
blogdownn::serve_site()
blogdown::serve_site()
rm(list=ls())
data1 <- read.csv("https://opendata-geohive.hub.arcgis.com/datasets/d8eb52d56273413b84b0187a4e9117be_0.csv?outSR=%7B%22latestWkid%22%3A3857%2C%22wkid%22%3A102100%7D")
n <- nrow(data1)
data1$Date <- as.character(data1$Date)
data1$Date <- substr(data1$Date, 1, 10)
data1$Date <- as.Date(data1$Date, "%Y/%m/%d")
the.date <- data1$Date[n]
library(zoo)
library(ggplot2)
library(lubridate)
library(scales)
data1$newcases[1] <- NA
if (n > 1) for(i in 2:n) data1$newcases[i] <- ( data1$TotalConfirmedCovidCases[i] - data1$TotalConfirmedCovidCases[i-1] )
#gives rolling mean over 5 days
data1$cases_5d <- rollmeanr(data1$newcases, 5, fill=NA)
data1$cases_5d_off[1] <- NA
if (n > 15) for(i in 16:n) data1$cases_5d_off[i] <- data1$cases_5d[i-15]
plot <- ggplot (data1[(n-14):n,], aes(x=Date)) +
geom_line(aes(y=cases_5d, color = "red"),size=1.2) +
geom_line(aes(y=cases_5d_off, color="blue"),size=1,linetype = "dashed") +
scale_color_manual(values = c("blue","red"), name = "", labels = c("Previous Fortnight", "Last Fortnight")) +
scale_x_date("Date",breaks = pretty_breaks(10))+
scale_y_continuous("New daily cases (5-day average)")+
theme(legend.key = element_rect(fill = "lightblue", color = NA), axis.text=element_text(size=10, face = "bold"),
axis.title=element_text(size=14,face="bold"), plot.title = element_text(size=16, face = "bold")) +
scale_linetype(guide=FALSE) +
scale_size(guide=FALSE)+
guides(fill = guide_legend(reverse = TRUE))
plot
blogdown:::preview_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
knitr::opts_chunk$set(echo = FALSE)
rm(list=ls())
data1 <- read.csv("https://opendata-geohive.hub.arcgis.com/datasets/d8eb52d56273413b84b0187a4e9117be_0.csv?outSR=%7B%22latestWkid%22%3A3857%2C%22wkid%22%3A102100%7D")
data1 <- read.csv("https://opendata-geohive.hub.arcgis.com/datasets/d8eb52d56273413b84b0187a4e9117be_0.csv?outSR=%7B%22latestWkid%22%3A3857%2C%22wkid%22%3A102100%7D")
n <- nrow(data1)
n <- nrow(data1)
data1$Date <- as.character(data1$Date)
data1$Date <- substr(data1$Date, 1, 10)
data1$Date <- as.Date(data1$Date, "%Y/%m/%d")
the.date <- data1$Date[n]
## Counties most affected
As we can see in the map, **Dublin** and **Cavan** have suffered the highest relative proportion of cases, followed by Monaghan, Westmeath, Kildare and Wicklow. As of `r the.date` , it is mainly counties of the west that have been least affected
```{r, include=TRUE, message=FALSE}
rm(list=ls())
data1 <- read.csv("https://opendata-geohive.hub.arcgis.com/datasets/d9be85b30d7748b5b7c09450b8aede63_0.csv?outSR=%7B%22latestWkid%22%3A3857%2C%22wkid%22%3A102100%7D")
data1 <- read.csv("https://opendata-geohive.hub.arcgis.com/datasets/d9be85b30d7748b5b7c09450b8aede63_0.csv?outSR=%7B%22latestWkid%22%3A3857%2C%22wkid%22%3A102100%7D")
n <- nrow(data1)
data1$Date <- as.character(data1$TimeStamp)
data1$Date <- substr(data1$Date, 1, 10)
data1$Date <- as.Date(data1$Date, "%Y/%m/%d")
the.date <- data1$Date[n]
library(sf)
library(tidyverse)
library(tidyverse)
library(raster)
library(dplyr)
library(raster)
library(dplyr)
library(spData)
library(tmap)
library(tidyverse)
library(raster)
library(dplyr)
library(spData)
library(tmap)
library(csodata)
shp <- cso_get_geo("ac")
a<- data.frame(data1$Date, data1$CountyName, data1$ConfirmedCovidCases)
b <- reshape(a, direction="wide", idvar="data1.Date", timevar="data1.CountyName")
counties_start <- grep("data1.ConfirmedCovidCases.Carlow", colnames(b))
counties_stop <- grep("data1.ConfirmedCovidCases.Wicklow", colnames(b))
counties <- tibble(b[which(b$data1.Date == the.date ), counties_start:counties_stop])
cso <- read.csv("https://raw.githubusercontent.com/frankmoriarty/covid_ie/master/counties_population_cso_2016.csv")
counties <- data.frame(r1=names(counties), t(counties))
colnames(counties)[2] <- "cases"
colnames(counties)[1] <- "county_doh"
counties$county_doh <- substring(counties$county_doh,27)
counties$county_doh <- tolower(counties$county_doh)
counties$cases <- as.numeric(as.character(counties$cases))
counties[,1] <- sub("cases_", "", counties[,1])
counties$cases <- as.numeric(counties$cases)
county_cases <- merge(cso, counties, by="county_doh")
county_cases$cases_per_mil <- 1000000*county_cases$cases/county_cases$pop
names(shp)[8] <- "county"
shp$county[20]="Dun Laoghaire-Rathdown"
county_cases$county[8]="Dun Laoghaire-Rathdown"
merged_cases <- merge(shp, county_cases, by="county")
tm_shape(merged_cases) + tm_fill(col="cases_per_mil", style = "pretty", title=c(paste("Cases per million", the.date))) + tm_borders() + tm_layout(asp = 1.28)
blogdown::build_dir()
blogdown::build_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
